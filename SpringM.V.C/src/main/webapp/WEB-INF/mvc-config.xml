<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
    <!-- 设置扫描根目录-->
	<context:component-scan base-package="org.happylearn.train.springmvc.web"/>
	
	<!-- 处理静态资源，如果自定义HandlerMapping,注意Order要比Integer.maxValue小 -->
	<!-- 当HandlerMapping处理不了，直接转向 DefaultServletHttpRequestHandler进行静态资源处理 -->
	<mvc:default-servlet-handler/>
	<mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>  
	
	<!-- Since Spring3.0 -->
	<!-- bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/-->
	
	<!-- 开启注解支持 -->
    <mvc:annotation-driven enableMatrixVariables="true" conversion-service="conversionService" validator="validator" content-negotiation-manager="contentNegotiationManager">
    	<!-- 自定义参数解析器扩展 -->
    	<mvc:argument-resolvers>
    		<bean class="org.happylearn.train.springmvc.web.mvc.method.annotation.CustomHandlerMethodArgumentResolver"/>
    		<bean class="org.happylearn.train.springmvc.web.mvc.method.annotation.CustomServletModelAttributeMethodProcessor"/>
    	</mvc:argument-resolvers>
    	
    	<!-- 这里可以替换默认的Convertes，当使用@RequestBody、@ResponseBody时将使用对应的如下转换器 -->
    	<mvc:message-converters register-defaults="false">
    		<ref bean="stringHttpMessageConverter"/> 
    		<ref bean="fastjsonHttpMessageConverter"/>
    		<ref bean="xmlHttpMessageConverter"/>
    	</mvc:message-converters>
    </mvc:annotation-driven>
	
	<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" />
	<bean id="xmlHttpMessageConverter"
        class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
        <property name="marshaller" ref="castorMarshaller" />
        <property name="unmarshaller" ref="castorMarshaller" />
    </bean>

	<bean id="fastjsonHttpMessageConverter"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json"/>
	</bean>
	
	<bean id="stringHttpMessageConverter"  
        class="org.springframework.http.converter.StringHttpMessageConverter">  
        <property name="supportedMediaTypes">  
             <list>  
                  <value>text/plain;charset=UTF-8</value>  
                  <value>text/html;charset=UTF-8</value>  
             </list>
        </property>  
     </bean>  
     
	<!-- 定义拦截器 -->
	<mvc:interceptors>
		<!-- 此处定义全局拦截器  -->
		<!-- <bean class="org.happylearn.train.springmvc.web.interceptor.CustomHandlerInterceptor"/> -->
		<mvc:interceptor>
			<mvc:mapping path="/intercepted/**"/>
			<bean class="org.happylearn.train.springmvc.web.interceptor.CustomHandlerInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 定义MappedIntercepted -->
	<bean class="org.springframework.web.servlet.handler.MappedInterceptor">
    	<constructor-arg index="0">
    	<list>
    		<value>/intercepted/test</value>
    	</list>
    	</constructor-arg>
    	<constructor-arg index="1">
    		<bean class="org.happylearn.train.springmvc.web.interceptor.CustomHandlerInterceptor"/>
    	</constructor-arg>
    </bean>
    
	<bean id="/xmlController" class="org.happylearn.train.springmvc.web.XmlController"/>
	<import resource="mvc-config-negotiation.xml"/><!-- 内容协商管理器 -->
    <import resource="mvc-config-message-validation.xml"/><!-- 表单验证 -->
    <import resource="mvc-config-conversionservice.xml"/><!-- 自定义类型转换器 -->
</beans>
